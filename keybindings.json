[
  // cursor
  {
    "key": "ctrl+up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 5
    },
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 5
    },
    "when": "editorTextFocus"
  },

  // list
  {
    "key": "ctrl+up",
    "command": "runCommands",
    "args": {
      "commands": [
        "list.focusUp",
        "list.focusUp",
        "list.focusUp",
        "list.focusUp",
        "list.focusUp"
      ]
    },
    "when": "listFocus"
  },
  {
    "key": "ctrl+down",
    "command": "runCommands",
    "args": {
      "commands": [
        "list.focusDown",
        "list.focusDown",
        "list.focusDown",
        "list.focusDown",
        "list.focusDown"
      ]
    },
    "when": "listFocus"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "listFocus"
  },
  {
    "key": "ctrl+right",
    "command": "workbench.files.action.showActiveFileInExplorer",
    "when": "listFocus"
  },

  // text
  {
    "key": "tab",
    "command": "jumpToNextSnippetPlaceholder",
    "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
  },
  {
    "key": "cmd+e",
    "command": "eslint.executeAutofix",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+p",
    "command": "prettier.forceFormatDocument",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+backspace",
    "command": "editor.action.deleteLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+enter",
    "command": "runCommands",
    "args": {
      "commands": ["editor.action.insertLineAfter", "deleteAllLeft"]
    },
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+cmd+enter",
    "command": "runCommands",
    "args": {
      "commands": ["editor.action.insertLineBefore", "deleteAllLeft"]
    },
    "when": "editorTextFocus && !editorReadonly"
  },

  // editors
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.keepEditor"
  },
  {
    "key": "cmd+,",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "cmd+.",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.moveEditorToRightGroup"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.moveEditorToLeftGroup"
  },
  {
    "key": "cmd+i",
    "command": "git.openChange"
  },
  {
    "key": "cmd+o",
    "command": "git.openFile"
  },
  {
    "key": "cmd+;",
    "command": "editor.action.quickFix"
  },

  // workbench
  {
    "key": "shift+cmd+o",
    "command": "workbench.action.files.openFileFolder"
  },
  {
    "key": "shift+cmd+k",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "shift+cmd+h",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+s",
    "command": "workbench.view.scm"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.extension.github-pull-requests"
  },
  {
    "key": "shift+cmd+a",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "shift+cmd+\\",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "shift+cmd+m",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "shift+cmd+p",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "shift+cmd+l",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "shift+cmd+b",
    "command": "workbench.actions.view.problems"
  },
  {
    "key": "shift+cmd+,",
    "command": "workbench.action.openSettings"
  },
  {
    "key": "shift+cmd+i",
    "command": "git-graph.view"
  },
  {
    "key": "shift+cmd+r",
    "command": "prStatus:github.focus"
  },
  {
    "key": "shift+cmd+v",
    "command": "targetsContainers.focus"
  },
  {
    "key": "shift+cmd+;",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "shift+cmd+c",
    "command": "workbench.files.action.collapseExplorerFolders"
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.closeAllGroups"
  },

  // git
  {
    "key": "cmd+g shift+cmd+f",
    "command": "git.fetch"
  },
  {
    "key": "cmd+g shift+cmd+p",
    "command": "git.pull"
  },
  {
    "key": "cmd+g shift+cmd+c",
    "command": "git.checkout"
  },
  {
    "key": "cmd+g shift+cmd+enter",
    "command": "git.commit"
  },
  {
    "key": "cmd+g shift+cmd+u",
    "command": "git.push"
  },
  {
    "key": "cmd+g shift+cmd+m",
    "command": "git.merge"
  },
  {
    "key": "cmd+g shift+cmd+d",
    "command": "git.deleteBranch"
  },
  {
    "key": "cmd+g shift+cmd+left",
    "command": "git.undoCommit"
  },
  {
    "key": "cmd+g shift+cmd+s",
    "command": "git.stashIncludeUntracked"
  },
  {
    "key": "cmd+g shift+cmd+o",
    "command": "git.stashPop"
  },
  {
    "key": "cmd+g cmd+enter",
    "command": "git.stageAll"
  },
  {
    "key": "cmd+g cmd+backspace",
    "command": "git.unstageAll"
  },
  {
    "key": "cmd+g shift+cmd+backspace",
    "command": "git.cleanAll"
  },
  {
    "key": "cmd+enter",
    "command": "git.stage",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !inputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "git.unstage",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !inputFocus"
  },
  {
    "key": "shift+cmd+backspace",
    "command": "git.clean",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !inputFocus"
  },
  {
    "key": "cmd+enter",
    "command": "git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress && activeViewlet == 'workbench.view.scm'"
  },
  {
    "key": "cmd+backspace",
    "command": "git.unstageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress && activeViewlet == 'workbench.view.scm'"
  },
  {
    "key": "shift+cmd+backspace",
    "command": "git.revertSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress && activeViewlet == 'workbench.view.scm'"
  },
  {
    "key": "alt+l",
    "command": "git.viewLineHistory"
  },

  // settings
  {
    "key": "cmd+k shift+cmd+,",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "cmd+k shift+cmd+k",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  {
    "key": "cmd+k shift+cmd+s",
    "command": "workbench.action.openSnippets"
  },

  // restarts
  {
    "key": "ctrl+alt+cmd+l",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "ctrl+alt+cmd+t",
    "command": "typescript.restartTsServer"
  },
  {
    "key": "ctrl+alt+cmd+e",
    "command": "eslint.restart"
  },

  // explorer
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },

  // quokka
  {
    "key": "cmd+u shift+cmd+n",
    "command": "quokka.createFile",
    "when": "!quokka.isLiveShareClient && !terminalFocus"
  },
  {
    "key": "cmd+u shift+cmd+enter",
    "command": "quokka.makeQuokkaFromExistingFile",
    "when": "!quokka.isLiveShareClient && !terminalFocus"
  },
  {
    "key": "cmd+u shift+cmd+backspace",
    "command": "quokka.stopCurrent",
    "when": "quokka.hasActiveSession && !quokka.isLiveShareClient && !terminalFocus"
  },
  {
    "key": "cmd+u shift+cmd+d",
    "command": "quokka.debug",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && !inDebugMode && !quokka.isLiveShareClient && !quokka.traceBeingNavigated || activeEditor && !inDebugMode && !quokka.isLiveShareClient && !quokka.traceBeingNavigated && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "cmd+u shift+cmd+backspace",
    "command": "quokka.stopTraceNavigation",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "right",
    "command": "quokka.playTraceNextStepOver",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "left",
    "command": "quokka.playTracePrevStepOver",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "down",
    "command": "quokka.playTraceNextStep",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  },
  {
    "key": "up",
    "command": "quokka.playTracePrevStep",
    "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'"
  }
]
